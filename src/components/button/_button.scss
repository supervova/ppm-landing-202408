@use '../../styles/abstracts' as *;

/* -----------------------------------------------------------------------------
 * BASE STYLES FOR BUTTONS
 * -------------------------------------------------------------------------- */

.btn,
button,
input[type='submit'],
input[type='button'],
input[type='reset'],
a[role='button'] {
  --btn-border-outline: 1px solid var(--color-brand-border);
  --btn-color-outline: var(--color-brand-text);

  @include button; // Универсальные стили кнопок
}

// Убирает внутреннюю границу и отступы в Firefox
:where(button, [type='button'], [type='reset'], [type='submit'])::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/* -----------------------------------------------------------------------------
 * OUTLINE AND GHOST BUTTONS
 * -------------------------------------------------------------------------- */

.btn.is-outline,
.btn.is-ghost {
  background: transparent;
  color: var(--btn-color-outline);

  &:active,
  &:focus-visible {
    background: var(--color-ink-min);
  }

  @media (any-hover: hover) and (pointer: fine) {
    &:hover {
      background: var(--color-ink-min);
    }
  }
}

.btn.is-outline {
  border: var(--btn-border-outline);
}

/* -----------------------------------------------------------------------------
 * ICON BUTTONS
 * -------------------------------------------------------------------------- */

.btn.is-icon {
  padding: 0;
  width: var(--size-5);
  height: var(--size-5);
}

/* -----------------------------------------------------------------------------
 * DISABLED STATE
 * -------------------------------------------------------------------------- */

.btn[disabled],
button[disabled],
input[type='submit'][disabled],
input[type='button'][disabled],
input[type='reset'][disabled],
a[role='button'][disabled] {
  @include state-disabled();
}

/* -----------------------------------------------------------------------------
 * BUTTON GROUP
 * -------------------------------------------------------------------------- */

.buttons {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: var(--size-2);

  @supports not (gap: 4px) {
    > * {
      margin-bottom: var(--size-2);

      @media (--tablet) {
        margin-bottom: 0;
      }
    }

    .button + .button {
      margin-left: var(--size-1);
    }
  }
}
